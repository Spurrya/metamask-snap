"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.detectSIWE = void 0;
const siwe_parser_1 = require("@spruceid/siwe-parser");
const ethereumjs_util_1 = require("ethereumjs-util");
const logger_1 = require("./logger");
const log = (0, logger_1.createModuleLogger)(logger_1.projectLogger, 'detect-siwe');
/**
 * This function strips the hex prefix from a string if it has one.
 *
 * @param str - The string to check
 * @returns The string without the hex prefix
 */
function stripHexPrefix(str) {
    if (typeof str !== 'string') {
        return str;
    }
    return (0, ethereumjs_util_1.isHexPrefixed)(str) ? str.slice(2) : str;
}
/**
 * This function converts a hex string to text if it's not a 32 byte hex string.
 *
 * @param hex - The hex string to convert to text
 * @returns The text representation of the hex string
 */
function msgHexToText(hex) {
    try {
        const stripped = stripHexPrefix(hex);
        const buff = Buffer.from(stripped, 'hex');
        return buff.length === 32 ? hex : buff.toString('utf8');
    }
    catch (e) {
        log(e);
        return hex;
    }
}
/**
 * This function intercepts a sign message, detects if it's a
 * Sign-In With Ethereum (SIWE)(EIP-4361) message, and returns an object with
 * relevant SIWE data.
 *
 * {@see {@link https://eips.ethereum.org/EIPS/eip-4361}}
 *
 * @param msgParams - The params of the message to sign
 * @param msgParams.data - The data of the message to sign
 * @returns An object with the relevant SIWE data
 */
const detectSIWE = (msgParams) => {
    try {
        const { data } = msgParams;
        const message = msgHexToText(data);
        const parsedMessage = new siwe_parser_1.ParsedMessage(message);
        return {
            isSIWEMessage: true,
            parsedMessage,
        };
    }
    catch (error) {
        // ignore error, it's not a valid SIWE message
        return {
            isSIWEMessage: false,
            parsedMessage: null,
        };
    }
};
exports.detectSIWE = detectSIWE;
//# sourceMappingURL=siwe.js.map